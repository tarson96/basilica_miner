# Basilica Prometheus NGINX server configuration
# Generated by Ansible - DO NOT EDIT MANUALLY

# Port-based Prometheus access (keep for backward compatibility)
server {
{% if nginx_ssl_enabled | default(false) %}
    listen 8080 ssl http2;
    
    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/nginx_cert.pem;
    ssl_certificate_key /etc/nginx/ssl/nginx_key.pem;
    
    # SSL protocol and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # SSL session parameters
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
{% else %}
    listen 8080;
{% endif %}

    server_name _;

    # Logging configuration
    access_log /var/log/nginx/basilica-prometheus-port.access.log;
    error_log /var/log/nginx/basilica-prometheus-port.error.log;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Reverse proxy configuration for Prometheus
    location / {
        proxy_pass http://127.0.0.1:{{ prometheus_port | default(9090) }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Buffer settings
        proxy_buffering on;
        proxy_buffers {{ nginx_proxy_buffers | default('32 4k') }};
        
        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(60) }}s;
    }

    # Prometheus API endpoints
    location /api/ {
        proxy_pass http://127.0.0.1:{{ prometheus_port | default(9090) }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        
        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(60) }}s;
    }
}

# Domain-based Prometheus access (primary)
{% if nginx_ssl_enabled | default(false) %}
# HTTP server to redirect to HTTPS
server {
    listen 80;
    server_name {{ prometheus_domain | default('basilica-telemetry.tplr.ai') }};

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
{% endif %}

server {
{% if nginx_ssl_enabled | default(false) %}
    listen 443 ssl http2;
    
    # SSL certificate configuration
    ssl_certificate /etc/nginx/ssl/nginx_cert.pem;
    ssl_certificate_key /etc/nginx/ssl/nginx_key.pem;
    
    # SSL protocol and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # SSL session parameters
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
{% else %}
    listen 80;
{% endif %}

    server_name {{ prometheus_domain | default('basilica-telemetry.tplr.ai') }};

    # Logging configuration
    access_log /var/log/nginx/basilica-prometheus.access.log;
    error_log /var/log/nginx/basilica-prometheus.error.log;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Reverse proxy configuration for Prometheus
    location / {
        proxy_pass http://127.0.0.1:{{ prometheus_port | default(9090) }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Buffer settings
        proxy_buffering on;
        proxy_buffers {{ nginx_proxy_buffers | default('32 4k') }};
        
        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(60) }}s;
    }

    # Prometheus API endpoints
    location /api/ {
        proxy_pass http://127.0.0.1:{{ prometheus_port | default(9090) }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enable CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        
        # Timeouts
        proxy_connect_timeout {{ nginx_proxy_connect_timeout | default(60) }}s;
        proxy_send_timeout {{ nginx_proxy_send_timeout | default(60) }}s;
        proxy_read_timeout {{ nginx_proxy_read_timeout | default(60) }}s;
    }
}