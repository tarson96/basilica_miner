version: '3.8'

services:
  prometheus:
    image: prom/prometheus:{{ prometheus_version | default('v2.47.0') }}
    container_name: basilica-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.enable-remote-write-receiver'
      - '--storage.tsdb.retention.time={{ prometheus_retention_time | default("30d") }}'
      - '--storage.tsdb.retention.size={{ prometheus_retention_size | default("10GB") }}'
      - '--storage.tsdb.wal-compression'
    ports:
      - "{{ prometheus_port | default(9090) }}:9090"
    volumes:
      - {{ basilica_telemetry_dir }}/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - {{ basilica_telemetry_dir }}/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    networks:
      - telemetry
{% if basilica_network_external | default(true) %}
      - basilica_network
{% endif %}
    depends_on:
      - loki
    dns:
      - 1.1.1.1
      - 1.0.0.1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  loki:
    image: grafana/loki:{{ loki_version | default('2.9.2') }}
    container_name: basilica-loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "{{ loki_port | default(3100) }}:3100"
    volumes:
      - {{ basilica_telemetry_dir }}/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    networks:
      - telemetry
{% if basilica_network_external | default(true) %}
      - basilica_network
{% endif %}
    dns:
      - 1.1.1.1
      - 1.0.0.1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana:{{ grafana_version | default('10.2.0') }}
    container_name: basilica-grafana
    restart: unless-stopped
    ports:
      - "{{ grafana_port | default(3000) }}:3000"
    volumes:
      - {{ basilica_telemetry_dir }}/grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - {{ basilica_telemetry_dir }}/grafana/provisioning:/etc/grafana/provisioning:ro
      - {{ basilica_telemetry_dir }}/grafana/dashboards:/etc/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
      - grafana_logs:/var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_admin_password | default('basilica_admin') }}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_ALERTING_ENABLED=false
      - GF_UNIFIED_ALERTING_ENABLED=false
    networks:
      - telemetry
{% if basilica_network_external | default(true) %}
      - basilica_network
{% endif %}
    depends_on:
      - prometheus
      - loki
    dns:
      - 1.1.1.1
      - 1.0.0.1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  node-exporter:
    image: prom/node-exporter:{{ node_exporter_version | default('v1.6.1') }}
    container_name: basilica-node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "{{ node_exporter_port | default(9100) }}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - telemetry
{% if basilica_network_external | default(true) %}
      - basilica_network
{% endif %}
    dns:
      - 1.1.1.1
      - 1.0.0.1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  alertmanager:
    image: prom/alertmanager:{{ alertmanager_version | default('v0.26.0') }}
    container_name: basilica-alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:{{ alertmanager_port | default(9093) }}'
    ports:
      - "{{ alertmanager_port | default(9093) }}:9093"
    volumes:
      - {{ basilica_telemetry_dir }}/alertmanager.yml:/etc/alertmanager/config.yml:ro
      - alertmanager_data:/alertmanager
    networks:
      - telemetry
{% if basilica_network_external | default(true) %}
      - basilica_network
{% endif %}
    depends_on:
      - prometheus
    dns:
      - 1.1.1.1
      - 1.0.0.1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  prometheus_data:
    driver: local
  loki_data:
    driver: local
  grafana_data:
    driver: local
  grafana_logs:
    driver: local
  alertmanager_data:
    driver: local

networks:
  telemetry:
    driver: bridge
    name: basilica_telemetry
{% if basilica_network_external | default(true) %}
  basilica_network:
    external: true
    name: {{ basilica_network_name | default('basilica_network') }}
{% endif %}