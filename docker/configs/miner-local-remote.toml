# Miner Configuration with Remote Executor Deployment

[server]
host = "0.0.0.0"
port = 8092

[database]
url = "sqlite:/tmp/miner.db?mode=rwc"
max_connections = 5
min_connections = 1
connect_timeout = { secs = 5, nanos = 0 }
run_migrations = true

[logging]
level = "info"
format = "pretty"

[metrics]
enabled = true
host = "0.0.0.0"
port = 9091

[bittensor]
wallet_name = "templar_test"
hotkey_name = "M1"
network = "local"
netuid = 2
coldkey_name = "default"
axon_port = 8091
chain_endpoint = "ws://localhost:9945"
external_ip = "10.0.0.1"
max_weight_uids = 256

[validator_comms]
request_timeout = { secs = 30, nanos = 0 }
max_concurrent_sessions = 100

[validator_comms.auth]
enabled = false
method = "bittensor_signature"

[validator_comms.rate_limit]
enabled = false
requests_per_second = 10
burst_capacity = 20
window_duration = { secs = 60, nanos = 0 }

# Traditional executor management (optional - can be empty if using remote deployment)
[executor_management]
health_check_interval = { secs = 30, nanos = 0 }
health_check_timeout = { secs = 10, nanos = 0 }
max_retry_attempts = 3
auto_recovery = true
executors = []  # Will be populated by remote deployment

# Remote executor deployment configuration
[remote_executor_deployment]
# Path to local executor binary to deploy
local_executor_binary = "/path/to/basilica-executor"

# Auto-deploy on miner startup
auto_deploy = true

# Auto-start executors after deployment
auto_start = true

# Health check interval
health_check_interval = { secs = 60, nanos = 0 }

# Executor configuration template
executor_config_template = """
[server]
host = "0.0.0.0"
port = {EXECUTOR_PORT}

[database]
url = "sqlite:{DATA_DIR}/executor.db?mode=rwc"
run_migrations = true

[logging]
level = "info"
format = "pretty"

[miner]
managing_miner_hotkey = "{MINER_HOTKEY}"
managing_miner_address = "{MINER_ADDRESS}"

[docker]
socket_path = "/var/run/docker.sock"
network_name = "basilica"
enable_gpu_support = true

[docker.gpu_config]
runtime = "nvidia"
device_requests = [
    { count = -1, capabilities = [["gpu"]] }
]

[validation]
enable_ssh_access = true
ssh_port = 22
strict_ssh_restrictions = false

[resource_limits]
max_cpu_percent = 90
max_memory_mb = 32768
max_storage_gb = 500
"""

# Remote machines configuration
[[remote_executor_deployment.remote_machines]]
id = "gpu-server-1"
name = "GPU Server 1 - 4x RTX 4090"
executor_port = 50051
gpu_count = 4

[remote_executor_deployment.remote_machines.ssh]
host = "192.168.1.100"
port = 22
username = "ubuntu"
private_key_path = "/home/user/.ssh/gpu_server_key"
ssh_options = [
    "StrictHostKeyChecking=no",
    "UserKnownHostsFile=/dev/null"
]

[[remote_executor_deployment.remote_machines]]
id = "gpu-server-2"
name = "GPU Server 2 - 2x A100"
executor_port = 50051
gpu_count = 2

[remote_executor_deployment.remote_machines.ssh]
host = "192.168.1.101"
port = 22
username = "ubuntu"
private_key_path = "/home/user/.ssh/gpu_server_key"
ssh_options = [
    "StrictHostKeyChecking=no",
    "UserKnownHostsFile=/dev/null"
]

# Example with jump host for cloud deployment
[[remote_executor_deployment.remote_machines]]
id = "cloud-gpu-1"
name = "AWS GPU Instance"
executor_port = 50051
gpu_count = 8
executor_data_dir = "/opt/basilica"

[remote_executor_deployment.remote_machines.ssh]
host = "10.0.1.50"  # Private IP
port = 22
username = "ec2-user"
private_key_path = "/home/user/.ssh/aws_key.pem"
jump_host = "bastion@54.123.45.67"  # Public bastion host
ssh_options = [
    "StrictHostKeyChecking=no",
    "UserKnownHostsFile=/dev/null",
    "ServerAliveInterval=30"
]

[security]
enable_mtls = false
jwt_secret = "dev-secret-change-in-production"
token_expiration = { secs = 3600, nanos = 0 }
allowed_validators = []
verify_signatures = false