# Development Docker Compose with SQLite (no PostgreSQL)
# Builds debug binaries for faster compilation and better debugging

services:
  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: basilica-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: basilica-grafana
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Miner with SQLite
  miner:
    build:
      context: ..
      dockerfile: docker/miner.Dockerfile
      args:
        BUILD_MODE: debug
    container_name: basilica-miner-dev
    user: root  # Run as root to avoid permission issues with volume
    network_mode: host  # Use host network to access localhost services
    # Ports are not needed with host network mode
    volumes:
      - ./configs:/config:ro
      - miner-data:/data
      - ~/.bittensor:/root/.bittensor:ro  # Mount wallet directory read-only
    environment:
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
    command: ["-c", "/config/miner-local.toml", "--log-level", "debug"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=localhost:8092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Executor with GPU support
  executor:
    build:
      context: ..
      dockerfile: docker/executor.Dockerfile
      args:
        BUILD_MODE: debug
    container_name: basilica-executor-dev
    network_mode: host  # Use host network to communicate with miner
    volumes:
      - ./configs:/config:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - executor-data:/data
      - ~/.ssh:/root/.ssh:ro  # Mount SSH keys for validator access
    environment:
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - BASILCA_CONFIG_FILE=/config/executor-local.toml
    command: ["--server", "-c", "/config/executor-local.toml", "--log-level", "debug"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  # Use all available GPUs
              capabilities: [gpu]
    runtime: nvidia  # Explicitly use NVIDIA runtime
    privileged: true  # Required for GPU access and system monitoring
    depends_on:
      - miner
    restart: unless-stopped

  # gRPC UI for debugging
  grpcui:
    image: fullstorydev/grpcui:latest
    container_name: basilica-grpcui
    command: -plaintext -port 8081 localhost:8092
    network_mode: host
    depends_on:
      - miner

volumes:
  prometheus-data:
  grafana-data:
  miner-data:
  executor-data: